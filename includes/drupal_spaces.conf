# -*- mode: nginx; mode: flyspell-prog;  ispell-local-dictionary: "american" -*-
## Nginx configuration for Drupal sites that use
### http://api.drupal.org/api/drupal/developer--hooks--core.php/function/custom_url_rewrite_outbound/6
### like http://drupal.org/project/purl. If you're running OpenAtrium
### or Managing News use this configuration.

### This configuration makes use of drush
### (http:///drupal.org/project/drush) for site maintenance and like
### tasks:
###
### 1. Run the cronjobs.
### 2. Run the DB and code updates: drush up or drush upc followed by
###    drush updb to run any DB updates required by the code upgrades
###    that were performed.
### 3. Disabling of xmlrpc.xml, install.php (needed only for
###    installing the site) and update.php: all updates are now
###    handled through drush.

## The 'default' location.
location / {

    ## Drupal 404 from can impact performance. If using a module like
    ## search404 then 404's *have *to be handled by Drupal. Uncomment to
    ## relay the handling of 404's to Drupal.
    ## error_page 404 /index.php;

    ## Use index.html whenever there's no index.php.
    location = / {
        error_page 404 =200 /index.html;
    }
    
    ## Using a nested location is the 'correct' way to use regexes.

    ## If accessing an image generated by imagecache, serve it directly if
    ## available, if not relay the request to Drupal to (re)generate the
    ## image.
    location ~* /imagecache/ {
        access_log off;
        expires 30d;
        try_files $uri @drupal;
    }

    ## Drupal 7 generated image handling, i.e., imagecache in core. See:
    ## https://drupal.org/node/371374.
    location ~* /files/styles/ {
        access_log off;            
        expires 30d;
        try_files $uri @drupal;
    }
    
    ## All static files will be served directly.
    location ~* ^.+\.(?:css|js|jpg|jpeg|gif|ico|png|html|xml)$ {
        access_log        off;
        expires           30d;
        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;
    }

    ## Trying to access private files directly returns a 404.
    location ~* /files/private/ {
        internal;
    }

    
    ## Keep a tab on the 'big' static files.
    location ~* ^.+\.(?:m4a|mp3|mp4|mov|ogg|flv|pdf|ppt[x]*)$ {
        expires 30d;
        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;
    }

    
    ## Replicate the Apache <FilesMatch> directive of Drupal standard
    ## .htaccess. Disable access to any code files. Return a 404 to curtail
    ## information disclosure. Hide also the text files.
    location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|install|module|profile|po|sh|.*sql|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
        return 404; 
    }

    ## First we try the URI and relay to the @drupal if not found.
    try_files $uri @drupal;
}


########### Security measures ########## 

## Disallow access to .git directory: return 404 as not to disclose
## information.
location = /.git {
    return 404;
}

## Disallow access to patches directory.
location = /patches {
    return 404;
}

## Disallow access to drush backup directory.
location = /backup {
    return 404;
}

## Disable access logs for robots.txt.
location = /robots.txt {
    access_log off;
}

## RSS feed support.
location = /rss.xml {
    try_files $uri /index.php?q=$uri;
}

## XML Sitemap support.
location = /sitemap.xml {
    try_files $uri /index.php?q=$uri;
}

## Support for favicon. Return a 204 (No Content) if the favicon
## doesn't exist.
location = /favicon.ico {
    try_files /favicon.ico =204;
}

## This rewrite is needed for sites relying on
## http://drupal.org/project/purl like spaces
## http://drupal.org/project/spaces. This means that OpenAtrium and
## ManagingNews for example require it.
location @drupal {
    rewrite ^/(.*)$  /index.php?q=$1 last;
}

## Any other attempt to access PHP files returns a 404.
location ~* ^.+\.php$ {
    return 404; 
}
